from transformers import AutoTokenizer, AutoModelForCausalLM


_prompt = """
При наличии предыдущих промежуточных отчетов, воспринимайте это сообщение как профилактику сохранения контекста задачи и НЕ НАЧИНАЙТЕ РАБОТУ ЗАНОВО.

Если в предыдущих ответах не имеется отчетов или работа с документами была завершена, можете начать работу заново
Вам будут предоставлены документы, представляющие «Карточку котировочной сессии» (КС), состоящую из проекта контракта и, если имеется, технического задания. Ваша задача — проверить соответствие данных этим документам на основе заданного списка критериев. Критерии будут представлены в виде последовательности цифр, каждая из которых соответствует определенному требованию.
Этапы работы:
Ожидайте отправку номеров критериев для проверки. Номера отправляются числовой последовательностью. Например, "125" — проверить по критериям 1, 2 и 5.
Ожидайте загрузку проекта контракта. Контракт может быть загружен документом, либо в виде нескольких сообщений. После каждого сообщения, полученного на данном этапе, проведите анализ и отправьте отчет. Ожидайте следующего сообщения содержащее часть документа. Если вместо сообщения приходит этот промпт, продолжайте анализ после отправки следующего сообщения. При получении сообщения “FILE END”, отправка контракта пользователем считается законченной. Подтвердите его прием и переходите к следующему шагу.
Ожидайте загрузку технического задания, если оно имеется. Если документ отсутствует, пользователь отправит сообщение “EMPTY”. Контракт может быть загружен документом, либо в виде нескольких сообщений. После каждого сообщения, полученного на данном этапе, проведите анализ и отправьте отчет. Ожидайте следующего сообщения содержащее часть документа. Если вместо сообщения приходит этот промпт, продолжайте анализ после отправки следующего сообщения. При получении сообщения “FILE END”, отправка контракта пользователем считается законченной. Подтвердите его прием, либо зафиксируйте, что этот документ отсутствует.
После окончания загрузки всех документов, пользователь отправит сообщение “FINISH”. При получении этого сообщения необходимо сформировать финальный отчет и закончить работу с текущим КС.
При отправке пользователем части документа выполните анализ и обновите отчет с учетом новых данных. Каждый ответ пользователю на этапах загрузки документов должен представлять из себя Отчет о соответствии.
Критерии проверки:
Соответствие названия: Проверьте, что название в проекте контракта точно совпадает с названием в техническом задании, если оно предоставлено.
Обеспечение исполнения контракта: Если в проекте контракта установлено требование по обеспечению исполнения контракта, убедитесь, что оно также указано в техническом задании (если оно имеется).
Сертификаты/Лицензии:
Если в проекте контракта нет упоминания сертификатов или лицензий, убедитесь, что таких требований нет и в прикрепленном техническом задании.
Если сертификаты или лицензии указаны, проверьте, что требуемые документы перечислены и в проекте контракта, и в техническом задании (если оно имеется).
График и этап поставки: Убедитесь, что значения «График поставки» и «Этап поставки» совпадают между проектом контракта и техническим заданием (если оно имеется).
Предельная стоимость:
Если указано «Максимальное значение цены контракта», убедитесь, что значение совпадает с данными в техническом задании (если оно имеется).
В противном случае, если указана «Начальная цена», убедитесь, что в техническом задании (если оно имеется) значится «Цена Контракта».
Соответствие спецификации для товаров:
Если техническое задание предоставлено, убедитесь, что наименования и характеристики товаров в проекте контракта совпадают с указанными в техническом задании, включая количество товаров.
Если в техническом задании больше характеристик, чем в проекте контракта, отметьте это для дальнейшей проверки, но не снимайте с публикации автоматически.
По завершении проверки сформируйте структурированный отчет. При наличии отчета в предыдущем ответе пользователю, возьмите критерии, которые уже были пройдены и считайте их пройденными в новом отчете независимо от результатов текущей проверки.

В структуре отчета о соответствии, каждому критерию соответствует значение OK в случае прохождения проверки или FAIL в случае провала проверки. Каждое значение должно быть учтено при следующей проверке.

Пример структуры отчета, при котором пользователь отправил номера критериев 1,2 и 5:Отчет о соответствии: 
К1 (Соответствие названия): ОК
К2 (Обеспечение исполнения контракта): FAIL
К5 (Предельная стоимость): FAIL

Ответ пользователю на часть отправленного документа должен представлять из себя ТОЛЬКО Отчет о соответствии. Каждое сообщение с отчетом должно быть основано 
Применяйте этот структурированный подход для всех проверок по заданным критериям. 
"""


class LLMService:
    model_name = "Vikhrmodels/Vikhr-Qwen-2.5-0.5B-Instruct"

    def __init__(self):
        self.model = AutoModelForCausalLM.from_pretrained(self.model_name)
        self.tokenizer = AutoTokenizer.from_pretrained(self.model_name)

    def generate(self, prompt: str):
        messages = [
            {"role": "system", "content": "Вы - Vikhr, анализатор текста. Вы можете отвечать только строго по плану"},
            {"role": "user", "content": prompt},
        ]

        formatted_prompt = self.tokenizer.apply_chat_template(messages, tokenize=False, add_generation_prompt=True)
        inputs = self.tokenizer(formatted_prompt, return_tensors="pt")

        output = self.model.generate(
            inputs['input_ids'],
            attention_mask=inputs["attention_mask"],
            max_new_tokens=512,
            temperature=0.4,
            num_return_sequences=1,
            no_repeat_ngram_size=2,
            top_k=50,
            top_p=0.95,
        )
        return self.tokenizer.decode(output[0])


if __name__ == "__main__":
    print(LLMService().generate("Как у тебя дела?"))

